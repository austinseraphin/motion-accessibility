alias :accessibility_label= accessibilityLabel=
end
view.accessibilityLabel="test"
alias :accessibility_label= :setAccessibilityLabel
view.accessibility_label="Hail Eris"
view.accessibility_label
view.accessibilityLabel
%s[a b c]
%sabc
%s"abc"
view.viewIsModal
view.accessibilityViewIsModal
view.shouldGroupAccessibilityChildren
view.shouldGroupAccessibilityChildren=true
view.shouldGroupAccessibilityChildren="test"
view=UIView.alloc.init
view.should_group_accessibility_children=true
view.accessibility_label="Hail Eris"
view.accessibilityLabel
:adjustable.accessibility_trait
Accessibility::Adjustable
Accessibility::Trait::Adjustable
:adjustable.accessibility_trait
:adjustable.accessibility_trait
Accessibility::Trait.respond_to?(:Adjustable)
defined_constant
defined_constant?
defined?
Accessibility::Trait.defined?(:Adjustable)
Accessibility::TraitAccessibility::Trait.send(:Adjustable)
Accessibility::Trait.send(:Adjustable)
Accessibility::Trait.get_constant
{a: 1, b: 2}
:adjustable.accessibility_trait
Accessibility::Traits
Accessibility::Traits[:adjustable]
:adjustable.accessibility_trait
:adjustable.accessibility_trait
Accessibility::Traits[:adjustable]
:adjustable.accessibility_trait
:button.accessibility_trait
:button.accessibility_trait|:image.accessibility_trait
view=UIView.alloc.init
view.accessibility_traits(:image, :link)
view=UIView.alloc.init
view.accessibility_traits(:image, :link)
view=UIView.alloc.init
view.accessibility_traits=[:image, :link]
view.accessibility_traits
view.accessibility_trait=:image
:adjustable.accessibility_trait
:adjustable.accessibility_trait.type
:adjustable.accessibility_trait.class
view=UIView.alloc.init
view.accessibility_traits=:image
view.accessibility_traits
view=UIView.alloc.init
view.accessibility_traits=:image
view.accessibility_traits
view.accessibility_traits=[:image,:link]
view.accessibility_traits